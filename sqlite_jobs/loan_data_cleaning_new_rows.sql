-- Data validation for 'loan' table

CREATE TEMPORARY TABLE loan_id_report_date
AS
SELECT LOAN_ID,
       MAX(REPORTING_DATE) as MAX_REPORTING_DATE
FROM loan
GROUP BY LOAN_ID
;

-- Create temporary table for data validation
CREATE TEMPORARY TABLE validated_data
AS
SELECT l_s.LOAN_ID,
       l_s.CUSTOMER_ID,
       l_s.REPORTING_DATE,
       l_s.INTODEFAULT,
       l_s.INSTALLMENT_NM,
       l_s.LOAN_AMT,
       l_s.INSTALLMENT_AMT,
       l_s.PAST_DUE_AMT,
       l_s.BUCKET,
       CASE
        WHEN CAST(l_s.LOAN_ID AS INT) != l_s.LOAN_ID OR CAST(l_s.LOAN_ID AS INT) <= 0 THEN FALSE
        WHEN CAST(l_s.CUSTOMER_ID AS INT) != l_s.CUSTOMER_ID OR CAST(l_s.CUSTOMER_ID AS INT) <= 0 THEN FALSE
        WHEN l_s.REPORTING_DATE IS NULL THEN FALSE
        WHEN l_s.INTODEFAULT NOT IN ('Y', 'N') THEN FALSE
        WHEN CAST(l_s.INSTALLMENT_NM AS INT) != l_s.INSTALLMENT_NM OR CAST(l_s.INSTALLMENT_NM AS INT) NOT BETWEEN 12 AND 72 THEN FALSE
        WHEN CAST(l_s.LOAN_AMT AS DECIMAL) != l_s.LOAN_AMT OR CAST(l_s.LOAN_AMT AS DECIMAL) NOT BETWEEN 500 AND 100000 THEN FALSE
        WHEN CAST(l_s.INSTALLMENT_AMT AS DECIMAL) != l_s.INSTALLMENT_AMT AND CAST(l_s.INSTALLMENT_AMT AS DECIMAL) NOT BETWEEN 10 AND 100000 THEN FALSE
        WHEN CAST(l_s.PAST_DUE_AMT AS DECIMAL) != l_s.PAST_DUE_AMT OR CAST(l_s.PAST_DUE_AMT AS DECIMAL) < 0 THEN FALSE
        WHEN CAST(l_s.BUCKET AS INT) != l_s.BUCKET OR CAST(l_s.BUCKET AS INT) <= 0 THEN FALSE
        ELSE TRUE
    END AS IS_VALID,
    (CASE WHEN CAST(l_s.LOAN_ID AS INT) != l_s.LOAN_ID OR CAST(l_s.LOAN_ID AS INT) <= 0 THEN 'LOAN_ID' ELSE '' END) || '~' ||
    (CASE WHEN CAST(l_s.CUSTOMER_ID AS INT) != l_s.CUSTOMER_ID OR CAST(l_s.CUSTOMER_ID AS INT) <= 0 THEN 'CUSTOMER_ID' ELSE '' END) || '~' ||
    (CASE WHEN l_s.REPORTING_DATE IS NULL THEN 'REPORTING_DATE' ELSE '' END) || '~' ||
    (CASE WHEN l_s.INTODEFAULT NOT IN ('Y', 'N') THEN 'INTODEFAULT' ELSE '' END) || '~' ||
    (CASE WHEN CAST(l_s.INSTALLMENT_NM AS INT) != l_s.INSTALLMENT_NM OR CAST(l_s.INSTALLMENT_NM AS INT) NOT BETWEEN 12 AND 72 THEN 'INSTALLMENT_NM' ELSE '' END) || '~' ||
    (CASE WHEN CAST(l_s.LOAN_AMT AS DECIMAL) != l_s.LOAN_AMT OR CAST(l_s.LOAN_AMT AS DECIMAL) NOT BETWEEN 500 AND 100000 THEN 'LOAN_AMT' ELSE '' END) || '~' ||
    (CASE WHEN CAST(l_s.INSTALLMENT_AMT AS DECIMAL) != l_s.INSTALLMENT_AMT AND CAST(l_s.INSTALLMENT_AMT AS DECIMAL) NOT BETWEEN 10 AND 100000 THEN 'INSTALLMENT_AMT' ELSE '' END) || '~' ||
    (CASE WHEN CAST(l_s.PAST_DUE_AMT AS DECIMAL) != l_s.PAST_DUE_AMT OR CAST(l_s.PAST_DUE_AMT AS DECIMAL) < 0 THEN 'PAST_DUE_AMT' ELSE '' END) || '~' ||
    (CASE WHEN CAST(l_s.BUCKET AS INT) != l_s.BUCKET OR CAST(l_s.BUCKET AS INT) <= 0 THEN 'BUCKET' ELSE '' END)
    AS INVALID_COLUMNS
FROM loan_stage as l_s

LEFT JOIN loan_id_report_date as l_id_d ON l_s.LOAN_ID = l_id_d.LOAN_ID
WHERE l_id_d.LOAN_ID IS NULL OR l_id_d.MAX_REPORTING_DATE < l_s.REPORTING_DATE
;

DROP TABLE loan_id_report_date;

-- Insert valid data into 'loan' table
INSERT INTO loan
(LOAN_ID, CUSTOMER_ID, REPORTING_DATE, INTODEFAULT, INSTALLMENT_NM, LOAN_AMT, INSTALLMENT_AMT, PAST_DUE_AMT, BUCKET)
SELECT LOAN_ID,
       CUSTOMER_ID,

       -- Here the date is already in the correct format
       DATE(REPORTING_DATE),
       INTODEFAULT,
       INSTALLMENT_NM,
       LOAN_AMT,
       INSTALLMENT_AMT,
       PAST_DUE_AMT,
       BUCKET
FROM validated_data
WHERE IS_VALID = TRUE;


-- Delete the validated data from the stage table
-- for later output of error_rows.csv file
INSERT INTO loan_bad_data
(LOAN_ID, CUSTOMER_ID, REPORTING_DATE, INTODEFAULT, INSTALLMENT_NM, LOAN_AMT, INSTALLMENT_AMT, PAST_DUE_AMT, BUCKET, INVALID_COLUMNS, CREATION_DTM)
SELECT LOAN_ID,
       CUSTOMER_ID,
       DATE(REPORTING_DATE),
       INTODEFAULT,
       INSTALLMENT_NM,
       LOAN_AMT,
       INSTALLMENT_AMT,
       PAST_DUE_AMT,
       BUCKET,
       INVALID_COLUMNS,
       CURRENT_TIMESTAMP
FROM validated_data
WHERE IS_VALID = FALSE;


-- Drop temporary table
DROP TABLE validated_data;
