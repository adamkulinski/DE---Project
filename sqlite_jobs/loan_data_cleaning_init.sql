-- Data validation for 'loan' table


-- Truncate target table
DELETE
FROM loan;


-- Create temporary table for data validation
CREATE TEMPORARY TABLE validated_data
AS
SELECT LOAN_ID,
       CUSTOMER_ID,
       REPORTING_DATE,
       INTODEFAULT,
       INSTALLMENT_NM,
       LOAN_AMT,
       INSTALLMENT_AMT,
       PAST_DUE_AMT,
       BUCKET,
       CASE
        WHEN CAST(LOAN_ID AS INT) != LOAN_ID OR CAST(LOAN_ID AS INT) <= 0 THEN FALSE
        WHEN CAST(CUSTOMER_ID AS INT) != CUSTOMER_ID OR CAST(CUSTOMER_ID AS INT) <= 0 THEN FALSE
        WHEN DATE(REPORTING_DATE) IS NULL THEN FALSE
        WHEN INTODEFAULT NOT IN ('Y', 'N') THEN FALSE
        WHEN CAST(INSTALLMENT_NM AS INT) != INSTALLMENT_NM OR CAST(INSTALLMENT_NM AS INT) NOT BETWEEN 12 AND 72 THEN FALSE
        WHEN CAST(LOAN_AMT AS DECIMAL) != LOAN_AMT OR CAST(LOAN_AMT AS DECIMAL) NOT BETWEEN 500 AND 100000 THEN FALSE
        WHEN CAST(INSTALLMENT_AMT AS DECIMAL) != INSTALLMENT_AMT AND CAST(INSTALLMENT_AMT AS DECIMAL) NOT BETWEEN 10 AND 100000 THEN FALSE
        WHEN CAST(PAST_DUE_AMT AS DECIMAL) != PAST_DUE_AMT OR CAST(PAST_DUE_AMT AS DECIMAL) < 0 THEN FALSE
        WHEN CAST(BUCKET AS INT) != BUCKET OR CAST(BUCKET AS INT) <= 0 THEN FALSE
        ELSE TRUE
    END AS IS_VALID,
    (CASE WHEN CAST(LOAN_ID AS INT) != LOAN_ID OR CAST(LOAN_ID AS INT) <= 0 THEN 'LOAN_ID' ELSE '' END) || '~' ||
    (CASE WHEN CAST(CUSTOMER_ID AS INT) != CUSTOMER_ID OR CAST(CUSTOMER_ID AS INT) <= 0 THEN 'CUSTOMER_ID' ELSE '' END) || '~' ||
    (CASE WHEN DATE(REPORTING_DATE) IS NULL THEN 'REPORTING_DATE' ELSE '' END) || '~' ||
    (CASE WHEN INTODEFAULT NOT IN ('Y', 'N') THEN 'INTODEFAULT' ELSE '' END) || '~' ||
    (CASE WHEN CAST(INSTALLMENT_NM AS INT) != INSTALLMENT_NM OR CAST(INSTALLMENT_NM AS INT) NOT BETWEEN 12 AND 72 THEN 'INSTALLMENT_NM' ELSE '' END) || '~' ||
    (CASE WHEN CAST(LOAN_AMT AS DECIMAL) != LOAN_AMT OR CAST(LOAN_AMT AS DECIMAL) NOT BETWEEN 500 AND 100000 THEN 'LOAN_AMT' ELSE '' END) || '~' ||
    (CASE WHEN CAST(INSTALLMENT_AMT AS DECIMAL) != INSTALLMENT_AMT AND CAST(INSTALLMENT_AMT AS DECIMAL) NOT BETWEEN 10 AND 100000 THEN 'INSTALLMENT_AMT' ELSE '' END) || '~' ||
    (CASE WHEN CAST(PAST_DUE_AMT AS DECIMAL) != PAST_DUE_AMT OR CAST(PAST_DUE_AMT AS DECIMAL) < 0 THEN 'PAST_DUE_AMT' ELSE '' END) || '~' ||
    (CASE WHEN CAST(BUCKET AS INT) != BUCKET OR CAST(BUCKET AS INT) <= 0 THEN 'BUCKET' ELSE '' END)
    AS INVALID_COLUMNS
FROM loan_stage;




-- Insert valid data into 'loan' table
INSERT INTO loan
(LOAN_ID, CUSTOMER_ID, REPORTING_DATE, INTODEFAULT, INSTALLMENT_NM, LOAN_AMT, INSTALLMENT_AMT, PAST_DUE_AMT, BUCKET)
SELECT LOAN_ID,
       CUSTOMER_ID,

       -- Here the date is already in the correct format
       REPORTING_DATE,
       INTODEFAULT,
       INSTALLMENT_NM,
       LOAN_AMT,
       INSTALLMENT_AMT,
       PAST_DUE_AMT,
       BUCKET
FROM validated_data
WHERE IS_VALID = TRUE;


-- Delete the validated data from the stage table
-- for later output of error_rows.csv file
INSERT INTO loan_bad_data
(LOAN_ID, CUSTOMER_ID, REPORTING_DATE, INTODEFAULT, INSTALLMENT_NM, LOAN_AMT, INSTALLMENT_AMT, PAST_DUE_AMT, BUCKET, INVALID_COLUMNS, CREATION_DTM)
SELECT LOAN_ID,
       CUSTOMER_ID,
       REPORTING_DATE,
       INTODEFAULT,
       INSTALLMENT_NM,
       LOAN_AMT,
       INSTALLMENT_AMT,
       PAST_DUE_AMT,
       BUCKET,
       INVALID_COLUMNS,
       CURRENT_TIMESTAMP
FROM validated_data
WHERE IS_VALID = FALSE;


-- Drop temporary table
DROP TABLE validated_data;
